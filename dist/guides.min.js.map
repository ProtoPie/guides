{"version":3,"file":"guides.min.js","sources":["../src/react-guides/utils.ts","../src/react-guides/consts.ts","../src/react-guides/Guides.tsx","../src/InnerGuides.tsx","../src/index.ts","../src/GuidesManager.tsx"],"sourcesContent":["import { prefixNames } from 'framework-utils';\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames('scena-', ...classNames);\n}\n","import { PROPERTIES as RULER_PROPERTIES } from '@scena/react-ruler';\nimport { prefixCSS } from 'framework-utils';\n\nimport { GuidesOptions } from './types';\nimport { prefix } from './utils';\n\nexport const RULER = prefix('ruler');\nexport const ADDER = prefix('guide', 'adder');\nexport const GUIDES = prefix('guides');\nexport const GUIDE = prefix('guide');\nexport const DRAGGING = prefix('dragging');\nexport const DISPLAY_DRAG = prefix('display-drag');\nexport const GUIDES_CSS = prefixCSS(\n  'scena-',\n  `\n{\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\ncanvas {\n    position: relative;\n}\n.guide-origin {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    top: 0;\n    left: 0;\n    opacity: 0;\n}\n.guides {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    will-change: transform;\n    z-index: 2000;\n}\n.guide-pos {\n    position: absolute;\n    font-weight: bold;\n    color: #E04169;\n    width: 50px;\n    text-align: center;\n    backdrop-filter: blur(20px);\n}\n\n.horizontal .guide-pos {\n    bottom: 100%;\n    left: 50%;\n    transform: translate(-50%);\n}\n.vertical .guide-pos {\n    left: calc(100% + 2px);\n    top: 10px;\n    transform: translateY(-50%);\n}\n.display-drag {\n    position: absolute;\n    z-index: 2000;\n    font-weight: bold;\n    font-size: 12px;\n    display: block;\n    color: #E04169;\n    font-size: 10px;\n    line-height: 12px;\n    padding: 0 1px;\n    width: max-content;\n    backdrop-filter: blur(20px);\n}\n\n:host.horizontal .display-drag {\n    bottom: 100%;\n    left: 19px;\n}\n\n:host.horizontal .guides {\n    width: 100%;\n    height: 0;\n}\n:host.vertical .guides {\n    height: 100%;\n    width: 0;\n}\n.guide {\n    position: absolute;\n    background: #f33;\n    z-index: 2;\n}\n.selected {\n    background: #8169FF;\n}\n.guide.dragging:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n:host.horizontal .guide {\n    width: 100%;\n    height: 1px;\n    cursor: row-resize;\n}\n:host.vertical .guide {\n    width: 1px;\n    height: 100%;\n    cursor: col-resize;\n}\n:host.horizontal .dragging,\n:host.horizontal .selected {\n    height: 2px\n}\n:host.vertical .dragging,\n:host.vertical .selected {\n    width: 2px\n}\n.mobile :host.horizontal .guide {\n    transform: scale(1, 2);\n}\n.mobile :host.vertical .guide {\n    transform: scale(2, 1);\n}\n:host.horizontal .guide:before {\n    height: 10px;\n    margin-top: -5px;\n    display: block;\n    content: '';\n}\n:host.vertical .guide:before {\n    width: 10px;\n    height: 100%;\n    margin-left: -5px;\n    display: block;\n    content: '';\n}\n.adder {\n    display: none;\n}\n.adder.dragging {\n    display: block;\n}\n`,\n);\n\nexport const PROPERTIES: Array<keyof GuidesOptions> = [\n  'className',\n  'rulerStyle',\n  'snapThreshold',\n  'snaps',\n  'displayDragPos',\n  'cspNonce',\n  'dragPosFormat',\n  'defaultGuides',\n  'showGuides',\n  ...RULER_PROPERTIES,\n];\n\nexport const METHODS = [\n  'getGuides',\n  'loadGuides',\n  'scroll',\n  'scrollGuides',\n  'resize',\n  'deleteSelectedGuide',\n  'resetSelected',\n  'clearAllGuides',\n] as const;\n\nexport const EVENTS = ['changeGuides', 'dragStart', 'drag', 'dragEnd', 'clickRuler', 'deleteGuide', 'addGuide', 'resetGuides'] as const;\n","import { addClass, hasClass, removeClass } from '@daybrush/utils';\nimport Ruler, { PROPERTIES as RULER_PROPERTIES, RulerProps } from '@scena/react-ruler';\nimport { calculateMatrixDist, getDistElementMatrix } from 'css-to-mat';\nimport { ref, refs } from 'framework-utils';\nimport Gesto, { OnDragEnd } from 'gesto';\nimport * as React from 'react';\nimport styled, { StyledElement } from 'react-css-styled';\n\nimport { ADDER, DISPLAY_DRAG, DRAGGING, GUIDE, GUIDES, GUIDES_CSS } from './consts';\nimport { GuidesInterface, GuidesProps, GuidesState, OnDragStart } from './types';\nimport { prefix } from './utils';\n\nconst GuidesElement = styled('div', GUIDES_CSS);\n\nexport default class Guides extends React.PureComponent<GuidesProps, GuidesState> implements GuidesInterface {\n  public static defaultProps: GuidesProps = {\n    className: '',\n    type: 'horizontal',\n    zoom: 1,\n    style: {},\n    snapThreshold: 5,\n    snaps: [],\n    digit: 0,\n    onClickRuler: () => {},\n    onAddGuide: () => {},\n    onDeleteGuide: () => {},\n    onChangeGuides: () => {},\n    onDragStart: () => {},\n    onDrag: () => {},\n    onDragEnd: () => {},\n    displayDragPos: false,\n    dragPosFormat: v => v,\n    defaultGuides: [],\n    lockGuides: false,\n    showGuides: true,\n    guideStyle: {},\n    dragGuideStyle: {},\n    guidePosStyle: {},\n    portalContainer: null,\n  };\n  public state: GuidesState = {\n    guides: [],\n    selectedGuides: [],\n  };\n  public adderElement!: HTMLElement;\n  public scrollPos = 0;\n  public ruler!: Ruler;\n  private manager!: StyledElement<HTMLElement>;\n  private guidesElement!: HTMLElement;\n  private displayElement!: HTMLElement;\n  private originElement!: HTMLElement;\n  private gesto!: Gesto;\n  private guideElements: HTMLElement[] = [];\n  private _isFirstMove = false;\n  private _pointerEventsTimer: NodeJS.Timeout;\n\n  constructor(props: Required<GuidesProps>) {\n    super(props);\n    window.addEventListener('keydown', (e: KeyboardEvent) => {\n      if (e.code === 'Backspace' && this.state.selectedGuides.length) {\n        this.deleteSelectedGuide();\n      }\n    });\n\n    window.addEventListener('click', (e: MouseEvent) => {\n      this.resetSelected();\n      e.stopPropagation();\n    });\n  }\n\n  public disablePointerEventsOnScroll() {\n    if (!this.props?.showGuides) {\n      return;\n    }\n    this._pointerEventsTimer && clearTimeout(this._pointerEventsTimer);\n    this.guidesElement.style.pointerEvents = 'none';\n    this._pointerEventsTimer = setTimeout(() => {\n      this.guidesElement.style.pointerEvents = 'auto';\n    }, 300);\n  }\n\n  public render() {\n    const { className, type, zoom, style, rulerStyle, displayDragPos, cspNonce, dragGuideStyle, portalContainer } = this\n      .props as Required<GuidesProps>;\n    const props = this.props;\n    const translateName = this.getTranslateName();\n\n    const rulerProps: RulerProps = {};\n\n    RULER_PROPERTIES.forEach(name => {\n      if (name === 'style') {\n        return;\n      }\n      (rulerProps as any)[name] = props[name];\n    });\n    return (\n      <GuidesElement\n        ref={ref(this, 'manager')}\n        cspNonce={cspNonce}\n        className={`${prefix('manager', type)} ${className}`}\n        portalContainer={portalContainer}\n        style={style}\n      >\n        <div className={prefix('guide-origin')} ref={ref(this, 'originElement')}></div>\n        <Ruler ref={ref(this, 'ruler')} style={rulerStyle} {...rulerProps} />\n        <div\n          className={GUIDES}\n          ref={ref(this, 'guidesElement')}\n          style={{\n            transform: `${translateName}(${-this.scrollPos * zoom}px)`,\n          }}\n        >\n          {displayDragPos && <div className={DISPLAY_DRAG} ref={ref(this, 'displayElement')} style={dragGuideStyle} />}\n          <div className={ADDER} ref={ref(this, 'adderElement')} />\n          {this.renderGuides()}\n        </div>\n      </GuidesElement>\n    );\n  }\n\n  private selectGuide(pos: number, e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    this.setState({\n      selectedGuides: [pos],\n    });\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  public renderGuides() {\n    const props = this.props;\n    const { type, zoom, showGuides, guideStyle, displayGuidePos, guidePosStyle = {} } = props as Required<GuidesProps>;\n    const translateName = this.getTranslateName();\n    const guides = this.state.guides;\n    const guidePosFormat = props.guidePosFormat || props.dragPosFormat || (v => v);\n    const selectedGuides = this.state.selectedGuides;\n    this.guideElements = [];\n    if (showGuides) {\n      return guides.map((pos, i) => {\n        return (\n          <div\n            className={`${prefix('guide', type)} ${selectedGuides.includes(pos) ? prefix('selected') : ''}`}\n            ref={refs(this, 'guideElements', i)}\n            key={i}\n            data-index={i}\n            data-pos={pos}\n            onClick={e => this.selectGuide(pos, e)}\n            style={{\n              ...guideStyle,\n              transform: `${translateName}(${pos * zoom}px) translateZ(0px)`,\n            }}\n          >\n            {displayGuidePos && (\n              <div className={prefix('guide-pos')} style={guidePosStyle || {}}>\n                {guidePosFormat!(pos)}\n              </div>\n            )}\n          </div>\n        );\n      });\n    }\n    return;\n  }\n  public componentDidMount() {\n    this.gesto = new Gesto(this.manager.getElement(), {\n      container: document.body,\n    })\n      .on('dragStart', e => {\n        const { type, zoom, lockGuides } = this.props;\n\n        if (lockGuides === true) {\n          e.stop();\n          return;\n        }\n        const inputEvent = e.inputEvent;\n        const target = inputEvent.target;\n        const datas = e.datas;\n        const canvasElement = this.ruler.canvasElement;\n        const guidesElement = this.guidesElement;\n        const isHorizontal = type === 'horizontal';\n        const originRect = this.originElement.getBoundingClientRect();\n        const matrix = getDistElementMatrix(this.manager.getElement());\n        const offsetPos = calculateMatrixDist(matrix, [e.clientX - originRect.left, e.clientY - originRect.top]);\n        offsetPos[0] -= guidesElement.offsetLeft;\n        offsetPos[1] -= guidesElement.offsetTop;\n        offsetPos[isHorizontal ? 1 : 0] += this.scrollPos * zoom!;\n\n        datas.offsetPos = offsetPos;\n        datas.matrix = matrix;\n\n        const isLockAdd = lockGuides && lockGuides.indexOf('add') > -1;\n        const isLockRemove = lockGuides && lockGuides.indexOf('remove') > -1;\n        const isLockChange = lockGuides && lockGuides.indexOf('change') > -1;\n\n        if (target === canvasElement) {\n          if (isLockAdd) {\n            e.stop();\n            return;\n          }\n          datas.fromRuler = true;\n          datas.target = this.adderElement;\n          // add\n        } else if (hasClass(target, GUIDE)) {\n          if (isLockRemove && isLockChange) {\n            e.stop();\n            return;\n          }\n          datas.target = target;\n          // change\n        } else {\n          e.stop();\n          return false;\n        }\n        this.onDragStart(e as OnDragStart);\n      })\n      .on('drag', this.onDrag)\n      .on('dragEnd', this.onDragEnd);\n    // pass array of guides on mount data to create gridlines or something like that in ui\n    this.setState({ guides: this.props.defaultGuides || [] });\n  }\n  public componentWillUnmount() {\n    this.gesto.unset();\n  }\n  public componentDidUpdate(prevProps: any) {\n    if (prevProps.defaultGuides !== this.props.defaultGuides) {\n      // to dynamically update guides from code rather than dragging guidelines\n      this.setState({ guides: this.props.defaultGuides || [] });\n    }\n  }\n  /**\n   * Load the current guidelines.\n   * @memberof Guides\n   * @instance\n   */\n  public loadGuides(guides: number[]) {\n    this.setState({\n      guides,\n    });\n  }\n\n  /**\n   * Delete the selected guideline.\n   * @memberof Guides\n   * @instance\n   */\n  public deleteSelectedGuide() {\n    const guides = this.getGuides();\n    const guidesClone = this.getGuides();\n    const index = guides.findIndex(guide => {\n      if (this.state.selectedGuides.includes(guide)) {\n        return guide;\n      }\n    });\n\n    guides.splice(index, 1);\n\n    this.setState({\n      guides,\n      selectedGuides: [],\n    });\n\n    this.props.onDeleteGuide!({\n      deletedPosGuide: guidesClone[index],\n      deletedIndexGuide: index,\n    });\n  }\n\n  /**\n   * Clear all guidelines\n   * @memberof Guides\n   * @instance\n   */\n  public clearAllGuides() {\n    this.setState({\n      guides: [],\n    });\n  }\n\n  /**\n   * Get current guidelines.\n   * @memberof Guides\n   * @instance\n   */\n  public getGuides(): number[] {\n    return this.state.guides;\n  }\n  /**\n   * Scroll the positions of the guidelines opposite the ruler.\n   * @memberof Guides\n   * @instance\n   */\n  public scrollGuides(pos: number, zoom = 1) {\n    const guidesElement = this.guidesElement;\n\n    this.disablePointerEventsOnScroll();\n\n    this.scrollPos = pos;\n    guidesElement.style.transform = `${this.getTranslateName()}(${-pos * zoom}px)`;\n\n    const guides = this.state.guides;\n    this.guideElements.forEach((el, i) => {\n      if (!el) {\n        return;\n      }\n      el.style.display = -pos + guides[i] < 0 ? 'none' : 'block';\n    });\n  }\n  /**\n   * Recalculate the size of the ruler.\n   * @memberof Guides\n   * @instance\n   */\n  public resize() {\n    this.ruler.resize();\n  }\n  /**\n   * Scroll the position of the ruler.\n   * @memberof Guides\n   * @instance\n   */\n  public scroll(pos: number) {\n    this.ruler.scroll(pos);\n  }\n\n  private onDragStart = (e: OnDragStart) => {\n    this.resetSelected();\n    this.props.onDragStart(e);\n    this._isFirstMove = true;\n  };\n\n  private onDrag = (e: any) => {\n    if (this._isFirstMove) {\n      this._isFirstMove = false;\n      addClass(e.datas.target, DRAGGING);\n    }\n    const nextPos = this.movePos(e);\n\n    /**\n     * When dragging, the drag event is called.\n     * @memberof Guides\n     * @event drag\n     * @param {OnDrag} - Parameters for the drag event\n     */\n    this.props.onDrag!({\n      ...e,\n      dragElement: e.datas.target,\n    });\n    return nextPos;\n  };\n  private onDragEnd = (e: OnDragEnd) => {\n    const { datas, isDrag, distX, distY } = e;\n\n    if (!isDrag) {\n      return;\n    }\n\n    const pos = this.movePos(e);\n    let guides = this.state.guides;\n    const { onChangeGuides, onAddGuide, zoom, displayDragPos, digit, lockGuides } = this.props;\n    const guidePos = parseFloat((pos / zoom!).toFixed(digit || 0));\n\n    if (displayDragPos) {\n      this.displayElement.style.cssText += 'display: none;';\n    }\n\n    removeClass(datas.target, DRAGGING);\n\n    if (datas.fromRuler) {\n      if (this._isFirstMove) {\n        /**\n         * When click the ruler, the click ruler is called.\n         * @memberof Guides\n         * @event clickRuler\n         * @param {OnClickRuler} - Parameters for the clickRuler event\n         */\n        this.props.onClickRuler!({\n          ...e,\n          pos: 0,\n        });\n      }\n      if (guidePos >= this.scrollPos && guides.indexOf(guidePos) < 0) {\n        this.setState(\n          {\n            guides: [...guides, guidePos],\n          },\n          () => {\n            /**\n             * The `changeGuides` event occurs when the guideline is added / removed / changed.\n             * @memberof Guides\n             * @event changeGuides\n             * @param {OnChangeGuides} - Parameters for the changeGuides event\n             */\n            onChangeGuides!({\n              guides: this.state.guides,\n              distX,\n              distY,\n              isAdd: true,\n              isRemove: false,\n              isChange: false,\n            });\n\n            onAddGuide!({\n              posNewGuide: guidePos,\n            });\n          },\n        );\n      }\n    } else {\n      const index = datas.target.getAttribute('data-index');\n      let isRemove = false;\n      let isChange = false;\n\n      guides = [...guides];\n\n      if (guidePos < this.scrollPos) {\n        if (lockGuides && (lockGuides === true || lockGuides.indexOf('remove') > -1)) {\n          return;\n        }\n        const deletedPosGuide = guides[index];\n        guides.splice(index, 1);\n        this.props.onDeleteGuide!({\n          deletedIndexGuide: index,\n          deletedPosGuide,\n        });\n        isRemove = true;\n      } else if (guides.indexOf(guidePos) > -1) {\n        return;\n      } else {\n        if (lockGuides && (lockGuides === true || lockGuides.indexOf('change') > -1)) {\n          return;\n        }\n        guides[index] = guidePos;\n        isChange = true;\n      }\n      this.setState(\n        {\n          guides,\n        },\n        () => {\n          const nextGuides = this.state.guides;\n          onChangeGuides!({\n            distX,\n            distY,\n            guides: nextGuides,\n            isAdd: false,\n            isChange,\n            isRemove,\n          });\n        },\n      );\n    }\n    /**\n     * When the drag finishes, the dragEnd event is called.\n     * @memberof Guides\n     * @event dragEnd\n     * @param {OnDragEnd} - Parameters for the dragEnd event\n     */\n    this.props.onDragEnd!({\n      ...e,\n      dragElement: datas.target,\n    });\n  };\n  private movePos(e: any) {\n    const { datas, distX, distY } = e;\n    const props = this.props;\n    const { type, zoom, snaps, snapThreshold, displayDragPos, digit } = props;\n    const dragPosFormat = props.dragPosFormat || (v => v);\n    const isHorizontal = type === 'horizontal';\n    const matrixPos = calculateMatrixDist(datas.matrix, [distX, distY]);\n    const offsetPos = datas.offsetPos;\n    const offsetX = matrixPos[0] + offsetPos[0];\n    const offsetY = matrixPos[1] + offsetPos[1];\n    let nextPos = Math.round(isHorizontal ? offsetY : offsetX);\n    let guidePos = parseFloat((nextPos / zoom!).toFixed(digit || 0));\n    const guideSnaps = snaps!.slice().sort((a, b) => {\n      return Math.abs(guidePos - a) - Math.abs(guidePos - b);\n    });\n\n    if (guideSnaps.length && Math.abs(guideSnaps[0] * zoom! - nextPos) < snapThreshold!) {\n      guidePos = guideSnaps[0];\n      nextPos = guidePos * zoom!;\n    }\n    if (!datas.fromRuler || !this._isFirstMove) {\n      if (displayDragPos) {\n        const translate = type === 'horizontal' \n            ? this.calcHorizontalTransform(nextPos) \n            : this.calcVerticalTransform(nextPos);\n        this.displayElement.style.cssText += 'display: block; transform: ' + translate;\n        this.displayElement.innerHTML = `${dragPosFormat!(guidePos)}`;\n    }\n      const target = datas.target;\n\n      target.setAttribute('data-pos', guidePos);\n      target.style.transform = `${this.getTranslateName()}(${nextPos}px)`;\n    }\n\n    return nextPos;\n  }\n  private getTranslateName() {\n    return this.props.type === 'horizontal' ? 'translateY' : 'translateX';\n  }\n\n  public resetSelected() {\n    this.setState({\n      selectedGuides: [],\n    });\n  }\n\n  private calcHorizontalTransform(nextPos: number): string {\n    const translateY = `${nextPos - 10}px`;\n    return `translate(-18px, ${translateY}) rotate(-90deg)`;\n  }\n\n  private calcVerticalTransform(nextPos: number): string {\n    const translateX = `${nextPos + 8}px`;\n    return `translate(${translateX}, 1px)`;\n  }\n}\n","import { ref } from 'framework-utils';\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport ReactGuides from './react-guides';\nimport { GuidesOptions } from './react-guides/types';\n\nexport interface InnerGuidesProps extends GuidesOptions {\n  container?: HTMLElement;\n}\nexport default class InnerGuides extends React.Component<InnerGuidesProps, InnerGuidesProps> {\n  public state: InnerGuidesProps = {};\n  public guides: ReactGuides;\n  constructor(props: InnerGuidesProps) {\n    super(props);\n    this.state = { ...props };\n  }\n  public render() {\n    const { container, ...state } = this.state;\n    return createPortal(<ReactGuides ref={ref(this, 'guides')} {...state} />, container);\n  }\n}\n","import GuidesManager from './GuidesManager';\n\nexport * from './react-guides/types';\nexport default class Guides extends GuidesManager {}\n\n","import { camelize } from '@daybrush/utils';\nimport EventEmitter from '@scena/event-emitter';\nimport { Properties, ref } from 'framework-utils';\nimport * as React from 'react';\nimport { render } from 'react-dom';\n\nimport InnerGuides from './InnerGuides';\nimport { EVENTS, METHODS, PROPERTIES } from './react-guides/consts';\nimport { GuidesEvents, GuidesInterface, GuidesOptions } from './react-guides/types';\n\n@Properties(METHODS as any, (prototype, property) => {\n  if (prototype[property]) {\n    return;\n  }\n  prototype[property] = function (...args) {\n    const self = this.getInnerGuides();\n\n    if (!self || !self[property]) {\n      return;\n    }\n    return self[property](...args);\n  };\n})\n@Properties(PROPERTIES, (prototype, property) => {\n  Object.defineProperty(prototype, property, {\n    get() {\n      return this.getInnerGuides().props[property];\n    },\n    set(value) {\n      this.innerGuides.setState({\n        [property]: value,\n      });\n    },\n    enumerable: true,\n    configurable: true,\n  });\n})\n/**\n * @sort 1\n * @extends EventEmitter\n */\nclass Guides extends EventEmitter<GuidesEvents> {\n  private tempElement = document.createElement('div');\n  private innerGuides!: InnerGuides;\n  /**\n   * @sort 1\n   * @param - guides' container\n   * @param {$ts:Partial<Guides.GuidesOptions>} - guides' options\n   */\n  constructor(container: HTMLElement, options: Partial<GuidesOptions> = {}) {\n    super();\n    const events: any = {};\n\n    EVENTS.forEach(name => {\n      events[camelize(`on ${name}`)] = (e: any) => this.trigger(name as any, e);\n    });\n\n    render(<InnerGuides {...options} {...events} container={container} ref={ref(this, 'innerGuides')} />, this.tempElement);\n  }\n  /**\n   * @param state\n   * @param callback\n   */\n  public setState(state: Partial<GuidesOptions>, callback?: () => void) {\n    this.innerGuides.setState(state, callback);\n  }\n  /**\n   * destroy guides\n   */\n  public destroy() {\n    render(null, this.tempElement);\n    this.tempElement = null;\n    this.innerGuides = null;\n  }\n  private getInnerGuides() {\n    return this.innerGuides.guides;\n  }\n}\ninterface Guides extends GuidesInterface {}\n\nexport default Guides;\n"],"names":["prefix","_i","classNames","ADDER","GUIDES","GUIDE","DRAGGING","DISPLAY_DRAG","GUIDES_CSS","PROPERTIES","RULER_PROPERTIES","METHODS","EVENTS","GuidesElement","props","_super","_this","guides","selectedGuides","e","resetSelected","onDragStart","_isFirstMove","datas","target","nextPos","movePos","onDrag","dragElement","isDrag","distX","distY","pos","state","_a","onChangeGuides","onAddGuide","zoom","displayDragPos","digit","lockGuides","guidePos","parseFloat","toFixed","displayElement","style","cssText","fromRuler","onClickRuler","scrollPos","indexOf","setState","isAdd","isRemove","isChange","posNewGuide","index","getAttribute","isRemove_1","isChange_1","deletedPosGuide","splice","onDeleteGuide","deletedIndexGuide","nextGuides","onDragEnd","window","addEventListener","code","length","deleteSelectedGuide","stopPropagation","__extends","__proto","this","showGuides","_pointerEventsTimer","clearTimeout","guidesElement","pointerEvents","setTimeout","className","type","rulerStyle","cspNonce","dragGuideStyle","portalContainer","translateName","getTranslateName","rulerProps","forEach","name","React","ref","Ruler","transform","renderGuides","preventDefault","guideStyle","displayGuidePos","_b","guidePosStyle","guidePosFormat","dragPosFormat","v","guideElements","map","i","includes","key","onClick","selectGuide","gesto","Gesto","manager","getElement","container","document","body","on","stop","inputEvent","canvasElement","ruler","isHorizontal","originRect","originElement","getBoundingClientRect","matrix","getDistElementMatrix","offsetPos","calculateMatrixDist","clientX","left","clientY","top","isLockAdd","offsetLeft","offsetTop","isLockRemove","isLockChange","adderElement","defaultGuides","unset","prevProps","getGuides","guidesClone","findIndex","guide","disablePointerEventsOnScroll","el","display","resize","scroll","snaps","snapThreshold","matrixPos","offsetX","offsetY","Math","round","guideSnaps","slice","sort","a","b","abs","translate","calcHorizontalTransform","calcVerticalTransform","innerHTML","setAttribute","Guides","createPortal","ReactGuides","options","events","createElement","trigger","render","InnerGuides","tempElement","callback","innerGuides","Properties","prototype","property","args","self","getInnerGuides","Object","defineProperty","get","set","value","enumerable","configurable","EventEmitter"],"mappings":";;;;;;;;iq1BAEgBA,QAAO,aAAAC,mBAAAA,IAAAC,kBACnB,wMAAmB,UAAaA,CAAU,EAC9C,CCEqBF,EAAO,OAAO,EAA5B,aACMG,GAAQH,EAAO,QAAS,OAAO,EAC/BI,GAASJ,EAAO,QAAQ,EACxBK,GAAQL,EAAO,OAAO,EACtBM,GAAWN,EAAO,UAAU,EAC5BO,GAAeP,EAAO,cAAc,EACpCQ,OACX,SACA,01EAqIWC,MACX,YACA,aACA,gBACA,QACA,iBACA,WACA,gBACA,gBACA,cACGC,CAAgB,EAGRC,GAAU,CACrB,YACA,aACA,SACA,eACA,SACA,sBACA,gBACA,kBAGWC,GAAS,CAAC,eAAgB,YAAa,OAAQ,UAAW,aAAc,cAAe,WAAY,eC/J1GC,OAAuB,YAAOL,iJA4ClC,WAAYM,GAAZ,MACEC,YAAMD,CAAK,eAjBNE,QAAqB,CAC1BC,OAAQ,GACRC,eAAgB,IAGXF,YAAY,EAOXA,gBAA+B,GAC/BA,eAAe,CAAA,EA8QfA,cAAc,SAACG,GACrBH,EAAKI,gBACLJ,EAAKF,MAAMO,YAAYF,CAAC,EACxBH,EAAKM,aAAe,CAAA,GAGdN,SAAS,SAACG,GACZH,EAAKM,eACPN,EAAKM,aAAe,CAAA,IACXH,EAAEI,MAAMC,SAAQlB,4DAErBmB,EAAUT,EAAKU,QAAQP,CAAC,EAY9B,OAJAH,EAAKF,MAAMa,cACNR,CAAC,GACJS,YAAaT,EAAEI,MAAMC,UAEhBC,GAEDT,YAAY,SAACG,GACX,IAAAI,EAAgCJ,QAAzBU,EAAyBV,SAAjBW,EAAiBX,QAAVY,EAAUZ,QAExC,GAAKU,EAAL,CAIA,IAAMG,EAAMhB,EAAKU,QAAQP,CAAC,EACtBF,EAASD,EAAKiB,MAAMhB,OAClBiB,EAA0ElB,EAAKF,MAA7EqB,mBAAgBC,eAAYC,SAAMC,mBAAgBC,UAAOC,eAC3DC,EAAWC,YAAYV,EAAMK,GAAOM,QAAQJ,GAAS,CAAC,CAAC,EAQ7D,GANID,IACFtB,EAAK4B,eAAeC,MAAMC,SAAW,oBAG3BvB,EAAMC,SAAQlB,kHAEtBiB,EAAMwB,UACJ/B,EAAKM,cAOPN,EAAKF,MAAMkC,oBACN7B,CAAC,GACJa,IAAK,KAGLS,GAAYzB,EAAKiC,WAAahC,EAAOiC,QAAQT,CAAQ,EAAI,GAC3DzB,EAAKmC,SACH,CACElC,SAAYA,GAAQwB,KAEtB,WAOEN,EAAgB,CACdlB,OAAQD,EAAKiB,MAAMhB,OACnBa,QACAC,QACAqB,MAAO,CAAA,EACPC,SAAU,CAAA,EACVC,SAAU,CAAA,EACX,EAEDlB,EAAY,CACVmB,YAAad,EACd,EACF,MAGA,CACL,IAAMe,EAAQjC,EAAMC,OAAOiC,aAAa,YAAY,EAChDC,EAAW,CAAA,EACXC,EAAW,CAAA,EAEf1C,IAAaA,CAAM,EAEnB,GAAIwB,EAAWzB,EAAKiC,UAAW,CAC7B,GAAIT,IAA8B,CAAA,IAAfA,GAAsD,CAAC,EAAhCA,EAAWU,QAAQ,QAAQ,GACnE,OAEIU,EAAkB3C,EAAOuC,GAC/BvC,EAAO4C,OAAOL,EAAO,CAAC,EACtBxC,EAAKF,MAAMgD,cAAe,CACxBC,kBAAmBP,EACnBI,kBACD,EACDF,EAAW,CAAA,MACN,CAAA,GAA+B,CAAC,EAA5BzC,EAAOiC,QAAQT,CAAQ,EAChC,OAEA,GAAID,IAA8B,CAAA,IAAfA,GAAsD,CAAC,EAAhCA,EAAWU,QAAQ,QAAQ,GACnE,OAEFjC,EAAOuC,GAASf,EAChBkB,EAAW,CAAA,EAEb3C,EAAKmC,SACH,CACElC,UAEF,WACE,IAAM+C,EAAahD,EAAKiB,MAAMhB,OAC9BkB,EAAgB,CACdL,QACAC,QACAd,OAAQ+C,EACRZ,MAAO,CAAA,EACPE,WACAD,WACD,EACF,EASLrC,EAAKF,MAAMmD,iBACN9C,CAAC,GACJS,YAAaL,EAAMC,YAhZrB0C,OAAOC,iBAAiB,UAAW,SAAChD,GACnB,cAAXA,EAAEiD,MAAwBpD,EAAKiB,MAAMf,eAAemD,QACtDrD,EAAKsD,sBAER,EAEDJ,OAAOC,iBAAiB,QAAS,SAAChD,GAChCH,EAAKI,gBACLD,EAAEoD,kBACH,IArD+BC,OAsDjC,kBAgcH,OA9bSC,+BAAP,WAAA,sBACOC,KAAK5D,UAAO6D,aAGjBD,KAAKE,qBAAuBC,aAAaH,KAAKE,mBAAmB,EACjEF,KAAKI,cAAcjC,MAAMkC,cAAgB,OACzCL,KAAKE,oBAAsBI,WAAW,WACpChE,EAAK8D,cAAcjC,MAAMkC,cAAgB,QACxC,GAAG,IAGDN,SAAP,WACQ,IAAAvC,EAA0GwC,KAC7G5D,MADKmE,cAAWC,SAAM7C,SAAMQ,UAAOsC,eAAY7C,mBAAgB8C,aAAUC,mBAAgBC,oBAEtFxE,EAAQ4D,KAAK5D,MACbyE,EAAgBb,KAAKc,mBAErBC,EAAyB,GAQ/B,OANA/E,EAAiBgF,QAAQ,SAAAC,GACV,UAATA,IAGHF,EAAmBE,GAAQ7E,EAAM6E,IACnC,EAECC,gBAAC/E,IACCgF,IAAKA,EAAInB,KAAM,SAAS,EACxBU,SAAUA,EACVH,UAAcjF,EAAO,UAAWkF,CAAI,MAAKD,EACzCK,gBAAiBA,EACjBzC,MAAOA,GAEP+C,uBAAKX,UAAWjF,EAAO,cAAc,EAAG6F,IAAKA,EAAInB,KAAM,eAAe,IACtEkB,gBAACE,KAAMD,IAAKA,EAAInB,KAAM,OAAO,EAAG7B,MAAOsC,GAAgBM,CAAU,GACjEG,uBACEX,UAAW7E,GACXyF,IAAKA,EAAInB,KAAM,eAAe,EAC9B7B,MAAO,CACLkD,UAAcR,MAAiB,CAACb,KAAKzB,UAAYZ,UAGlDC,GAAkBsD,uBAAKX,UAAW1E,GAAcsF,IAAKA,EAAInB,KAAM,gBAAgB,EAAG7B,MAAOwC,IAC1FO,uBAAKX,UAAW9E,GAAO0F,IAAKA,EAAInB,KAAM,cAAc,IACnDA,KAAKsB,cAAc,CAChB,GAKJvB,cAAR,SAAoBzC,EAAab,GAC/BuD,KAAKvB,SAAS,CACZjC,eAAgB,CAACc,GAClB,EACDb,EAAEoD,kBACFpD,EAAE8E,kBAGGxB,eAAP,WAAA,WACQ3D,EAAQ4D,KAAK5D,MACXoE,EAA4EpE,OAAtEuB,EAAsEvB,OAAhE6D,EAAgE7D,aAApDoF,EAAoDpF,aAAxCqF,EAAwCrF,kBAAvBsF,EAAuBtF,gBAAvBuF,aAAgB,KACvEd,EAAgBb,KAAKc,mBACrBvE,EAASyD,KAAKzC,MAAMhB,OACpBqF,EAAiBxF,EAAMwF,gBAAkBxF,EAAMyF,eAAkB,SAAAC,GAAK,OAAAA,GACtEtF,EAAiBwD,KAAKzC,MAAMf,eAElC,GADAwD,KAAK+B,cAAgB,GACjB9B,EACF,OAAO1D,EAAOyF,IAAI,SAAC1E,EAAK2E,GACtB,OACEf,uBACEX,UAAcjF,EAAO,QAASkF,CAAI,OAAKhE,EAAe0F,SAAS5E,CAAG,EAAIhC,EAAO,UAAU,EAAI,IAC3F6F,OAAU7E,IAAM,6CAChB6F,MADiCF,eAErBA,aACF3E,EACV8E,QAAS,SAAA3F,GAAK,OAAAH,EAAK+F,YAAY/E,EAAKb,CAAC,GACrC0B,aACKqD,CAAU,GACbH,UAAcR,MAAiBvD,EAAMK,2BAGtC8D,GACCP,uBAAKX,UAAWjF,EAAO,WAAW,EAAG6C,MAAOwD,GAAiB,IAC1DC,EAAgBtE,CAAG,CAAC,CAExB,YAGN,GAIEyC,oBAAP,WAAA,WACEC,KAAKsC,MAAQ,IAAIC,GAAMvC,KAAKwC,QAAQC,aAAc,CAChDC,UAAWC,SAASC,KACrB,EACEC,GAAG,YAAa,SAAApG,GACT,IAAAe,EAA6BlB,EAAKF,MAAhCoE,SAAM7C,SAAMG,eAEpB,GAAmB,CAAA,IAAfA,EACFrB,EAAEqG,WADJ,CAIA,IACMhG,EADaL,EAAEsG,WACKjG,OACpBD,EAAQJ,EAAEI,MACVmG,EAAgB1G,EAAK2G,MAAMD,cAC3B5C,EAAgB9D,EAAK8D,cACrB8C,EAAwB,eAAT1C,EACf2C,EAAa7G,EAAK8G,cAAcC,wBAChCC,EAASC,EAAqBjH,EAAKkG,QAAQC,YAAY,EACvDe,EAAYC,EAAoBH,EAAQ,CAAC7G,EAAEiH,QAAUP,EAAWQ,KAAMlH,EAAEmH,QAAUT,EAAWU,IAAI,EAQjGC,GAPNN,EAAU,IAAMpD,EAAc2D,WAC9BP,EAAU,IAAMpD,EAAc4D,UAC9BR,EAAUN,EAAe,EAAI,IAAM5G,EAAKiC,UAAYZ,EAEpDd,EAAM2G,UAAYA,EAClB3G,EAAMyG,OAASA,EAEGxF,GAA0C,CAAC,EAA7BA,EAAWU,QAAQ,KAAK,GAClDyF,EAAenG,GAA6C,CAAC,EAAhCA,EAAWU,QAAQ,QAAQ,EACxD0F,EAAepG,GAA6C,CAAC,EAAhCA,EAAWU,QAAQ,QAAQ,EAE9D,GAAI1B,IAAWkG,EAAe,CAC5B,GAAIc,EAEF,OADArH,KAAAA,EAAEqG,OAGJjG,EAAMwB,UAAY,CAAA,EAClBxB,EAAMC,OAASR,EAAK6H,iBAEf,CAAA,KAAqBxI,MAARmB,4FASlB,OADAL,EAAEqG,OACK,CAAA,EARP,GAAImB,GAAgBC,EAElB,OADAzH,KAAAA,EAAEqG,OAGJjG,EAAMC,OAASA,EAMjBR,EAAKK,YAAYF,CAAgB,GAClC,EACAoG,GAAG,OAAQ7C,KAAK/C,MAAM,EACtB4F,GAAG,UAAW7C,KAAKT,SAAS,EAE/BS,KAAKvB,SAAS,CAAElC,OAAQyD,KAAK5D,MAAMgI,eAAiB,GAAI,GAEnDrE,uBAAP,WACEC,KAAKsC,MAAM+B,SAENtE,qBAAP,SAA0BuE,GACpBA,EAAUF,gBAAkBpE,KAAK5D,MAAMgI,eAEzCpE,KAAKvB,SAAS,CAAElC,OAAQyD,KAAK5D,MAAMgI,eAAiB,GAAI,GAQrDrE,aAAP,SAAkBxD,GAChByD,KAAKvB,SAAS,CACZlC,SACD,GAQIwD,sBAAP,WAAA,WACQxD,EAASyD,KAAKuE,YACdC,EAAcxE,KAAKuE,YACnBzF,EAAQvC,EAAOkI,UAAU,SAAAC,GAC7B,GAAIpI,EAAKiB,MAAMf,eAAe0F,SAASwC,CAAK,EAC1C,OAAOA,EAEV,EAEDnI,EAAO4C,OAAOL,EAAO,CAAC,EAEtBkB,KAAKvB,SAAS,CACZlC,SACAC,eAAgB,GACjB,EAEDwD,KAAK5D,MAAMgD,cAAe,CACxBF,gBAAiBsF,EAAY1F,GAC7BO,kBAAmBP,EACpB,GAQIiB,iBAAP,WACEC,KAAKvB,SAAS,CACZlC,OAAQ,GACT,GAQIwD,YAAP,WACE,OAAOC,KAAKzC,MAAMhB,QAObwD,eAAP,SAAoBzC,EAAaK,gBAAAA,KAC/B,IAAMyC,EAAgBJ,KAAKI,cAOrB7D,GALNyD,KAAK2E,+BAEL3E,KAAKzB,UAAYjB,EACjB8C,EAAcjC,MAAMkD,UAAerB,KAAKc,uBAAsB,CAACxD,EAAMK,QAEtDqC,KAAKzC,MAAMhB,QAC1ByD,KAAK+B,cAAcf,QAAQ,SAAC4D,EAAI3C,GACzB2C,IAGLA,EAAGzG,MAAM0G,QAAU,CAACvH,EAAMf,EAAO0F,GAAK,EAAI,OAAS,SACpD,GAOIlC,SAAP,WACEC,KAAKiD,MAAM6B,UAON/E,SAAP,SAAczC,GACZ0C,KAAKiD,MAAM8B,OAAOzH,CAAG,GA6IfyC,UAAR,SAAgBtD,GACN,IAAAI,EAAwBJ,QAAjBW,EAAiBX,QAAVY,EAAUZ,QAC1BL,EAAQ4D,KAAK5D,MACXoE,EAA4DpE,OAAtDuB,EAAsDvB,OAAhD4I,EAAgD5I,QAAzC6I,EAAyC7I,gBAA1BwB,EAA0BxB,iBAAVyB,EAAUzB,QAC9DyF,EAAgBzF,EAAMyF,eAAkB,SAAAC,GAAK,OAAAA,GAC7CoB,EAAwB,eAAT1C,EACf0E,EAAYzB,EAAoB5G,EAAMyG,OAAQ,CAAClG,EAAOC,EAAM,EAC5DmG,EAAY3G,EAAM2G,UAClB2B,EAAUD,EAAU,GAAK1B,EAAU,GACnC4B,EAAUF,EAAU,GAAK1B,EAAU,GACrCzG,EAAUsI,KAAKC,MAAMpC,EAAekC,EAAUD,CAAO,EACrDpH,EAAWC,YAAYjB,EAAUY,GAAOM,QAAQJ,GAAS,CAAC,CAAC,EACzD0H,EAAaP,EAAOQ,QAAQC,KAAK,SAACC,EAAGC,GACzC,OAAON,KAAKO,IAAI7H,EAAW2H,CAAC,EAAIL,KAAKO,IAAI7H,EAAW4H,CAAC,EACtD,EAoBD,OAlBIJ,EAAW5F,QAAU0F,KAAKO,IAAIL,EAAW,GAAK5H,EAAQZ,CAAO,EAAIkI,IAEnElI,GADAgB,EAAWwH,EAAW,IACD5H,GAElBd,EAAMwB,WAAc2B,KAAKpD,eACxBgB,IACIiI,EAAqB,eAATrF,EACZR,KAAK8F,wBAAwB/I,CAAO,EACpCiD,KAAK+F,sBAAsBhJ,CAAO,EACxCiD,KAAK9B,eAAeC,MAAMC,SAAW,8BAAgCyH,EACrE7F,KAAK9B,eAAe8H,UAAY,GAAGnE,EAAe9D,CAAQ,IAEtDjB,EAASD,EAAMC,QAEdmJ,aAAa,WAAYlI,CAAQ,EACxCjB,EAAOqB,MAAMkD,UAAerB,KAAKc,uBAAsB/D,SAGlDA,GAEDgD,mBAAR,WACE,MAA2B,eAApBC,KAAK5D,MAAMoE,KAAwB,aAAe,cAGpDT,gBAAP,WACEC,KAAKvB,SAAS,CACZjC,eAAgB,GACjB,GAGKuD,0BAAR,SAAgChD,GAE9B,MAAO,qBADeA,EAAU,6BAI1BgD,wBAAR,SAA8BhD,GAE5B,MAAO,cADeA,EAAU,kBAlfpBmJ,eAA4B,CACxC3F,UAAW,GACXC,KAAM,aACN7C,KAAM,EACNQ,MAAO,GACP8G,cAAe,EACfD,MAAO,GACPnH,MAAO,EACPS,aAAc,aACdZ,WAAY,aACZ0B,cAAe,aACf3B,eAAgB,aAChBd,YAAa,aACbM,OAAQ,aACRsC,UAAW,aACX3B,eAAgB,CAAA,EAChBiE,cAAe,SAAAC,GAAK,OAAAA,GACpBsC,cAAe,GACftG,WAAY,CAAA,EACZmC,WAAY,CAAA,EACZuB,WAAY,GACZb,eAAgB,GAChBgB,cAAe,GACff,gBAAiB,SAxBeM,eAAmB,iBCDrD,WAAY9E,GAAZ,MACEC,YAAMD,CAAK,eAHNE,QAA0B,GAI/BA,EAAKiB,WAAanB,CAAK,IAM3B,OAXyC0D,0BAOvC,WACE,IAAMtC,EAA0BwC,KAAKzC,MAA7BmF,cAAcnF,yUAAhB,aAAuB,EAC7B,OAAO4I,eAAajF,gBAACkF,MAAYjF,IAAKA,EAAInB,KAAM,QAAQ,GAAOzC,CAAK,GAAMmF,CAAS,IAEvF,EAXyCxB,WAAe,qBCPxD,4DAAmD,OAAfpB,QAAe,cC8CjD,WAAY4C,EAAwB2D,gBAAAA,MAApC,MACEhK,mBACMiK,GATAhK,cAAcqG,SAAS4D,cAAc,KAAK,EAS5B,WAEpBrK,GAAO8E,QAAQ,SAAAC,GACbqF,GAAgB,MAAMrF,oEAAW,SAACxE,GAAW,OAAAH,EAAKkK,QAAQvF,EAAaxE,CAAC,GACzE,EAEDgK,SAAOvF,gBAACwF,QAAgBL,EAAaC,GAAQ5D,UAAWA,EAAWvB,IAAKA,EAAI7E,EAAM,aAAa,KAAOA,EAAKqK,WAAW,IAhBrG7G,OAkBnB,kBAkBF,OAdSC,WAAP,SAAgBxC,EAA+BqJ,GAC7C5G,KAAK6G,YAAYpI,SAASlB,EAAOqJ,CAAQ,GAKpC7G,UAAP,WACE0G,SAAO,KAAMzG,KAAK2G,WAAW,EAC7B3G,KAAK2G,YAAc,KACnB3G,KAAK6G,YAAc,MAEb9G,iBAAR,WACE,OAAOC,KAAK6G,YAAYtK,6UAjE3BuK,EAAW7K,GAAgB,SAAC8K,EAAWC,GAClCD,EAAUC,KAGdD,EAAUC,GAAY,eAAU,aAAAzL,mBAAAA,IAAA0L,kBAC9B,IAAMC,EAAOlH,KAAKmH,iBAElB,GAAKD,GAASA,EAAKF,GAGnB,OAAOE,EAAKF,SAALE,EAAkBD,CAAI,IAEhC,EACAH,EAAW/K,GAAY,SAACgL,EAAWC,GAClCI,OAAOC,eAAeN,EAAWC,EAAU,CACzCM,eACE,OAAOtH,KAAKmH,iBAAiB/K,MAAM4K,IAErCO,aAAIC,SACFxH,KAAK6G,YAAYpI,iBACduI,GAAWQ,OAGhBC,WAAY,CAAA,EACZC,aAAc,CAAA,EACf,EACF,GAKKxB,CAAM,GAASyB,CAAY,CDtCgB"}